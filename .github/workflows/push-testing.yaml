name: "Tests"

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

defaults:
  run:
    shell: "bash"

permissions:
  contents: "read"

jobs:
  RunTestsOnMacOS:
    name: "Run Tests on macOS"

    runs-on: "macos-15"

    timeout-minutes: 30

    env:
      VCPKG_BINARY_SOURCES: "clear;files,${{ github.workspace }}/vcpkg-cache,readwrite"

    steps:
      - name: "Install dependencies"
        run: "brew install obs ccache"

      - name: "Checkout"
        uses: "actions/checkout@v5"

      - name: "Restore Ccache cache"
        uses: "actions/cache/restore@v4"
        id: "ccache-cache"
        with:
          path: "~/.ccache"
          key: "${{ runner.os }}-ccache-${{ github.ref_name }}-testing-${{ github.sha }}"
          restore-keys: |
            ${{ runner.os }}-ccache-${{ github.ref_name }}-testing-
            ${{ runner.os }}-ccache-main-testing-

      - name: "Restore Vcpkg cache"
        uses: "actions/cache/restore@v4"
        id: "vcpkg-cache"
        with:
          path: "${{ github.workspace }}/vcpkg-cache"
          key: "${{ runner.os }}-vcpkg-${{ github.ref_name }}-testing-${{ github.sha }}"
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ github.ref_name }}-testing-
            ${{ runner.os }}-vcpkg-main-testing-

      - name: "Configure"
        run: "cmake --preset macos-testing-ci"

      - name: "Build"
        run: "cmake --build --preset macos-testing-ci"

      - name: "Show Ccache statistics"
        run: "ccache -s"

      - name: "Save Ccache cache"
        uses: "actions/cache/save@v4"
        with:
          path: "~/.ccache"
          key: "${{ runner.os }}-ccache-${{ github.ref_name }}-testing-${{ github.sha }}"

      - name: "Save Vcpkg cache"
        uses: "actions/cache/save@v4"
        with:
          path: "${{ github.workspace }}/vcpkg-cache"
          key: "${{ runner.os }}-vcpkg-${{ github.ref_name }}-testing-${{ github.sha }}"

      - name: "Run tests"
        run: "ctest --preset macos-testing-ci --verbose"

      - name: "Run shader tests"
        run: "./scripts/run-gtest-with-retry.bash ./build_macos/tests/RelWithDebInfo/DrawingEffect_shader_test 100"

  RunTestsOnWindows:
    name: "Run Tests on Windows"

    runs-on: "windows-2022"

    timeout-minutes: 30

    env:
      VCPKG_BINARY_SOURCES: "clear;files,${{ github.workspace }}/vcpkg-cache,readwrite"

    steps:
      - name: "Install dependencies"
        run: |
          choco install obs-studio.install -y --no-progress
          choco install ccache -y --no-progress
          echo "$env:ProgramFiles\obs-studio\bin\64bit" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: "pwsh"

      - name: "Checkout"
        uses: "actions/checkout@v5"

      - name: "Restore Vcpkg cache"
        uses: "actions/cache/restore@v4"
        id: "vcpkg-cache"
        with:
          path: "${{ github.workspace }}/vcpkg-cache"
          key: "${{ runner.os }}-vcpkg-${{ github.ref_name }}-testing-${{ github.sha }}"
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ github.ref_name }}-testing-
            ${{ runner.os }}-vcpkg-main-testing-

      - name: "Configure"
        run: "cmake --preset windows-testing-ci-x64 -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache"

      - name: "Build"
        run: "cmake --build --preset windows-testing-ci-x64"
      
      - name: "List files for debugging"
        run: "dir -Recurse"
        shell: "pwsh"

      - name: "Save Vcpkg cache"
        uses: "actions/cache/save@v4"
        with:
          path: "${{ github.workspace }}/vcpkg-cache"
          key: "${{ runner.os }}-vcpkg-${{ github.ref_name }}-testing-${{ github.sha }}"

      - name: "Copy OBS data"
        run: |
          Copy-Item -Path "$env:ProgramFiles\obs-studio\data" -Destination "..\data" -Recurse -Verbose
        shell: "pwsh"

      - name: "Run tests"
        run: "ctest --preset windows-testing-ci-x64 --verbose"

      - name: "Run shader tests"
        run: "./scripts/run-gtest-with-retry.bash ./build_x64/tests/RelWithDebInfo/DrawingEffect_shader_test 100"

  RunTestsOnUbuntu:
    name: "Run Tests on Ubuntu"

    runs-on: "ubuntu-24.04"

    timeout-minutes: 30

    env:
      DISPLAY: ":99.0"
      VCPKG_BINARY_SOURCES: "clear;files,${{ github.workspace }}/vcpkg-cache,readwrite"

    steps:
      - name: "Disable man-db update"
        run: |
          echo "man-db man-db/auto-update boolean false" | sudo debconf-set-selections
          sudo apt-get remove --purge -y man-db

      - name: "Install dependencies"
        run: |
          sudo add-apt-repository -y ppa:obsproject/obs-studio
          sudo apt update
          sudo apt-get install -y --no-install-recommends \
            libgles2-mesa-dev \
            obs-studio \
            qt6-base-dev \
            libqt6svg6-dev \
            qt6-base-private-dev \
            cmake \
            ccache \
            git \
            jq \
            ninja-build \
            pkg-config \
            xvfb

      - name: "Start Xvfb"
        run: "sudo Xvfb $DISPLAY -screen 0 1920x1080x24 +extension Composite &"

      - name: "Checkout"
        uses: "actions/checkout@v5"

      - name: "Restore Ccache cache"
        uses: "actions/cache/restore@v4"
        id: "ccache-cache"
        with:
          path: "~/.ccache"
          key: "${{ runner.os }}-ccache-${{ github.ref_name }}-testing-${{ github.sha }}"
          restore-keys: |
            ${{ runner.os }}-ccache-${{ github.ref_name }}-testing-
            ${{ runner.os }}-ccache-main-testing-

      - name: "Restore Vcpkg cache"
        uses: "actions/cache/restore@v4"
        id: "vcpkg-cache"
        with:
          path: "${{ github.workspace }}/vcpkg-cache"
          key: "${{ runner.os }}-vcpkg-${{ github.ref_name }}-testing-${{ github.sha }}"
          restore-keys: |
            ${{ runner.os }}-vcpkg-${{ github.ref_name }}-testing-
            ${{ runner.os }}-vcpkg-main-testing-

      - name: "Configure"
        run: "cmake --preset ubuntu-testing-ci-x86_64"

      - name: "Build"
        run: "cmake --build --preset ubuntu-testing-ci-x86_64"

      - name: "Show Ccache statistics"
        run: "ccache -s"

      - name: "Save Ccache cache"
        uses: "actions/cache/save@v4"
        with:
          path: "~/.ccache"
          key: "${{ runner.os }}-ccache-${{ github.ref_name }}-testing-${{ github.sha }}"

      - name: "Save Vcpkg cache"
        uses: "actions/cache/save@v4"
        with:
          path: "${{ github.workspace }}/vcpkg-cache"
          key: "${{ runner.os }}-vcpkg-${{ github.ref_name }}-testing-${{ github.sha }}"

      - name: "Run tests"
        run: "ctest --preset ubuntu-testing-ci-x86_64 --verbose"

      - name: "Run shader tests"
        run: "./scripts/run-gtest-with-retry.bash ./build_x86_64/tests/DrawingEffect_shader_test 100"

